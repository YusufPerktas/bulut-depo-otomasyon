const { pool } = require("./connection");

const StockIslem = {
  // üìå 1Ô∏è‚É£ √úr√ºn/Demirba≈ülarƒ± Kategoriye G√∂re Getir
  getByCategory: (category, callback) => {
    const query = `SELECT ${category === "Demirba≈ü" ? "Demirbas_id" : "Urun_id"} AS id, ${category === "Demirba≈ü" ? "Demirbas_Adi" : "Urun_Adi"} adi 
                   FROM ${category === "Demirba≈ü" ? "demirbas" : "urun"}`;
    pool.query(query, (err, results) => {
      if (err) {
        console.error("Kategoriye g√∂re √ºr√ºn/demirba≈ü getirme hatasƒ±:", err);
        return callback(err, null);
      }
      callback(null, results);
    });
  },

  // üìå 2Ô∏è‚É£ √úr√ºn/Demirba≈ü Beden/√ñzelliklerini Getir
  getSizesByProduct: (productId, category, callback) => {
    const query = `SELECT BedenOzellik_id AS id, BedenOzellik AS beden 
                   FROM ${category === "Demirba≈ü" ? "demirbas_bedenozellik" : "urun_bedenozellik"} 
                   WHERE ${category === "Demirba≈ü" ? "demirbas_id = ?" : "urun_id = ?"}`;
    pool.query(query, [productId], callback);
  },

  // üìå 3Ô∏è‚É£ Stok G√ºncelleme (Ekleme ve √áƒ±karma)
updateStock: (data, callback) => {
    const { category, productId, sizeId, quantity, transactionType } = data;
    const table = category === "Demirba≈ü" ? "demirbas_stok" : "urun_stok";
    const idField = category === "Demirba≈ü" ? "Demirbas_id" : "Urun_id";

    const query = transactionType === "ekle"
        ? `UPDATE ${table} SET stok_miktar = stok_miktar + ? WHERE ${idField} = ? AND BedenOzellik_id = ?`
        : `UPDATE ${table} SET stok_miktar = stok_miktar - ? WHERE ${idField} = ? AND BedenOzellik_id = ?`;

    pool.query(query, [quantity, productId, sizeId], callback);
},

  // üìå 4Ô∏è‚É£ Maliyet ve Satƒ±≈ü Kayƒ±t Ekleme
  addTransaction: (data, callback) => {
    const { category, productId, sizeId, quantity, price, transactionType, date } = data;
    let query = "";
    let values = [];

    if (transactionType === "ekle") {
      query = `INSERT INTO ${category === "Demirba≈ü" ? "demirbas_maliyet" : "urun_maliyet"} 
               (${category === "Demirba≈ü" ? "Demirbas_id" : "Urun_id"}, BedenOzellik_id, Miktar, Maliyet_Fiyati, Tarih) VALUES (?, ?, ?, ?, ?)`;
      values = [productId, sizeId, quantity, price, date];
    } 
    else if (transactionType === "cikar" && category === "Demirba≈ü") {
      query = `INSERT INTO demirbas_hurda (Demirbas_id, BedenOzellik_id, Demirbas_Miktar, Tarih) VALUES (?, ?, ?, ?)`;
      values = [productId, sizeId, quantity, date];
    } 
    else if (transactionType === "cikar" && category !== "Demirba≈ü") {
      query = `INSERT INTO urun_satis (Urun_id, BedenOzellik_id, Urun_Miktar, Satis_fiyati, Tarih) VALUES (?, ?, ?, ?, ?)`;
      values = [productId, sizeId, quantity, price, date];
    }
      pool.query(query, values, callback);
   
  }
};

module.exports = { StockIslem };
